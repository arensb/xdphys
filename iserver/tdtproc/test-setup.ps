%!PS-Adobe-2.0
%%Title: test-setup
%%Creator: fig2dev Version 3.1 Patchlevel 1
%%CreationDate: Wed Apr  2 16:11:46 1997
%%For: cmalek@tyto (Chris Malek)
%%Orientation: Landscape
%%BoundingBox: 44 49 568 742
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {} def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
40.0 16.5 translate
 90 rotate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  userdict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/clp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/l {lineto} bind def
/m {moveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 2474 2627 m 2324 2627 l  2324 3077 l  2474 3077 l  2474 2927 l  2624 2927 l 
 2624 2777 l  2474 2777 l  2474 2627 l  gs col-1 s gr 
% Ellipse
n 1050 7275 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3824 7278 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3825 7875 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3825 8325 106 113 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 676 6976 m 4126 6976 l  4126 8626 l  676 8626 l  clp  gs col-1 s gr 
/Times-Roman findfont 270.00 scalefont setfont
2101 7351 m
gs 1 -1 sc (SD1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
900 7650 m
gs 1 -1 sc (Input) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
3225 7200 m
gs 1 -1 sc (Mux) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
3225 8400 m
gs 1 -1 sc (Last) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
3225 7950 m
gs 1 -1 sc (First) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
3225 7425 m
gs 1 -1 sc (Out) col-1 show gr
% Polyline
n 9076 6524 m 9076 6374 l  9526 6374 l  9526 6524 l  9376 6524 l  9376 6674 l 
 9226 6674 l  9226 6524 l  9076 6524 l  gs col-1 s gr 
% Ellipse
n 3153 4953 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3153 5328 106 106 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 2176 5776 m 3526 5776 l  gs col-1 s gr 
% Polyline
n 2177 4577 m 3527 4577 l  3527 6302 l  2177 6302 l  clp  gs col-1 s gr 
/Times-Roman findfont 270.00 scalefont setfont
2552 6152 m
gs 1 -1 sc (TG6) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
2852 5027 m
gs 1 -1 sc (#1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
2852 5402 m
gs 1 -1 sc (#2) col-1 show gr
% Ellipse
n 5032 4221 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 5032 4698 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 5030 5105 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 5926 3301 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 5926 3751 106 113 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 4654 3044 m 6228 3044 l  6228 5778 l  4654 5778 l  clp  gs col-1 s gr 
% Polyline
n 4653 5328 m 6228 5328 l  gs col-1 s gr 
/Times-Roman findfont 270.00 scalefont setfont
5178 5628 m
gs 1 -1 sc (DD1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
5257 3344 m
gs 1 -1 sc (DA #1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
5257 3822 m
gs 1 -1 sc (DA #2) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
5257 4300 m
gs 1 -1 sc (AD #1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
5257 4778 m
gs 1 -1 sc (AD #2) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
5254 5179 m
gs 1 -1 sc (TRG) col-1 show gr
% Ellipse
n 7051 3195 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8175 3225 106 106 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 6826 3601 m 8401 3601 l  gs col-1 s gr 
% Polyline
n 6825 2700 m 8401 2700 l  8401 4051 l  6825 4051 l  clp  gs col-1 s gr 
/Times-Roman findfont 270.00 scalefont setfont
7351 3901 m
gs 1 -1 sc (PA4) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
7276 3301 m
gs 1 -1 sc (In) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
7725 3300 m
gs 1 -1 sc (Out) col-1 show gr
% Ellipse
n 7051 5145 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8175 5175 106 106 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 6826 5551 m 8401 5551 l  gs col-1 s gr 
% Polyline
n 6825 4575 m 8401 4575 l  8401 6001 l  6825 6001 l  clp  gs col-1 s gr 
/Times-Roman findfont 270.00 scalefont setfont
7351 5851 m
gs 1 -1 sc (PA4) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
7276 5251 m
gs 1 -1 sc (In) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
7725 5250 m
gs 1 -1 sc (Out) col-1 show gr
% Ellipse
n 9376 1801 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 10501 1801 106 113 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 11626 1801 106 113 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 7051 301 m 11026 301 l  11026 2101 l  7051 2101 l  clp  gs col-1 s gr 
% Polyline
n 7381 526 m 7276 526 7276 1696 105 arcto 4 {pop} repeat 7276 1801 8521 1801 105 arcto 4 {pop} repeat 8626 1801 8626 631 105 arcto 4 {pop} repeat 8626 526 7381 526 105 arcto 4 {pop} repeat clp  gs col-1 s gr 
% Polyline
n 8851 301 m 8851 2101 l  gs col-1 s gr 
% Polyline
n 9901 301 m 9901 2101 l  gs col-1 s gr 
% Polyline
n 11026 301 m 12076 301 l  12076 2101 l  11026 2101 l  clp  gs col-1 s gr 
% Interp Spline
n 7351 1126 m
	7391.06 907.53 7428.56 832.53 7501 826 curveto
	7608.99 816.26 7639.11 1143.55 7726 1126 curveto
	7797.65 1111.53 7720.24 848.37 7801 826 curveto
	7884.10 802.98 7921.84 1034.10 8026 1051 curveto
	8135.79 1068.82 8207.52 869.54 8326 901 curveto
	8421.52 926.37 8406.17 1088.63 8476 1126 curveto
	8476.00 1126.00 8476.00 1126.00 8476 1126 curveto
 gs col-1 s gr

/Times-Roman findfont 180.00 scalefont setfont
11401 1576 m
gs 1 -1 sc (TRIG) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
9151 901 m
gs 1 -1 sc (Bank 1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
10276 901 m
gs 1 -1 sc (Bank 2) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
9001 226 m
gs 1 -1 sc (Oscilloscope) col-1 show gr
% Ellipse
n 8777 8177 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8777 7652 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9300 7200 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3976 1126 636 636 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 4576 1726 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 4726 751 106 106 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3976 1126 375 375 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 240.07 50.07] PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
n 2400 2625 m 2400 2625 l gs col-1 s gr
% Polyline
n 8251 8401 m 9601 8401 l  gs col-1 s gr 
% Polyline
n 8252 6827 m 9602 6827 l  9602 8777 l  8252 8777 l  clp  gs col-1 s gr 
30.000 slw
% Polyline
n 9300 6675 m 9300 7200 l  gs col-1 s gr 
7.500 slw
% Polyline
n 3031 451 m 2926 451 2926 1846 105 arcto 4 {pop} repeat 2926 1951 4921 1951 105 arcto 4 {pop} repeat 5026 1951 5026 556 105 arcto 4 {pop} repeat 5026 451 3031 451 105 arcto 4 {pop} repeat clp  gs col-1 s gr 
30.000 slw
% Interp Spline
n 2400 2625 m
	2525.61 2384.13 2600.61 2290.38 2700 2250 curveto
	3033.72 2114.43 3609.45 2428.77 3900 2400 curveto
	4070.95 2383.07 4437.03 2366.42 4575 2175 curveto
	4640.44 2084.20 4640.44 1971.70 4575 1725 curveto
 gs col-1 s gr

% Interp Spline
n 9525 6450 m
	9862.88 6496.44 10012.88 6496.44 10125 6450 curveto
	10574.25 6263.92 11191.27 5583.87 11400 5175 curveto
	11619.82 4744.43 11676.19 3737.61 11700 3300 curveto
	11714.12 3040.41 11695.37 2665.41 11625 1800 curveto
 gs col-1 s gr

% Interp Spline
n 3150 4950 m
	3842.81 5049.60 4142.81 5087.10 4350 5100 curveto
	4465.64 5107.20 4634.39 5107.20 5025 5100 curveto
 gs col-1 s gr

% Interp Spline
n 3150 5325 m
	4742.81 6804.67 5492.81 7385.92 6150 7650 curveto
	6480.80 7782.93 7243.42 7803.23 7575 7800 curveto
	7784.89 7797.95 8084.89 7760.45 8775 7650 curveto
 gs col-1 s gr

% Interp Spline
n 5925 3300 m
	6252.32 3136.19 6402.32 3079.94 6525 3075 curveto
	6629.54 3070.79 6760.79 3108.29 7050 3225 curveto
 gs col-1 s gr

% Interp Spline
n 5925 3750 m
	6057.04 4558.50 6188.29 4896.00 6450 5100 curveto
	6559.25 5185.16 6709.25 5203.91 7050 5175 curveto
 gs col-1 s gr

% Interp Spline
n 2625 2850 m
	3251.39 3020.20 3513.89 3132.70 3675 3300 curveto
	3871.43 3503.98 3752.62 4087.14 4050 4275 curveto
	4258.78 4406.89 4502.53 4388.14 5025 4200 curveto
 gs col-1 s gr

% Interp Spline
n 2400 3075 m
	2464.16 3364.93 2464.16 3496.18 2400 3600 curveto
	2236.04 3865.30 1684.38 3879.25 1500 4050 curveto
	1179.46 4346.84 667.31 5081.18 600 5550 curveto
	548.55 5908.34 661.05 6339.59 1050 7275 curveto
 gs col-1 s gr

% Interp Spline
n 3825 7875 m
	4699.49 7856.48 5074.49 7762.73 5325 7500 curveto
	5407.62 7413.35 5285.31 7181.09 5400 7125 curveto
	5550.88 7051.20 5713.55 7341.62 5850 7350 curveto
	6519.09 7391.08 7614.57 6645.66 8175 6525 curveto
	8328.87 6491.87 8553.87 6473.12 9075 6450 curveto
 gs col-1 s gr

% Interp Spline
n 3825 7275 m
	4391.97 7213.19 4635.72 7156.94 4800 7050 curveto
	4882.09 6996.56 4905.92 6746.70 5025 6750 curveto
	5110.87 6752.38 5091.52 6943.32 5175 6975 curveto
	6084.77 7320.28 7356.47 6337.73 8025 6225 curveto
	8246.83 6187.60 8773.62 6224.44 9000 6150 curveto
	9163.80 6096.14 9478.41 5894.27 9600 5775 curveto
	9953.92 5427.85 10589.98 4558.44 10725 4050 curveto
	10808.74 3734.68 10680.78 3065.11 10650 2775 curveto
	10632.17 2606.95 10594.67 2363.20 10500 1800 curveto
 gs col-1 s gr

% Interp Spline
n 3825 8325 m
	5844.62 8112.99 6725.87 8075.49 7350 8175 curveto
	7501.14 8199.10 7787.12 8392.46 7950 8400 curveto
	8113.02 8407.54 8319.27 8351.29 8775 8175 curveto
 gs col-1 s gr

% Interp Spline
n 8175 3225 m
	8782.90 3195.39 9045.40 3139.14 9225 3000 curveto
	9337.20 2913.08 9427.28 2673.45 9450 2550 curveto
	9475.53 2411.30 9456.78 2223.80 9375 1800 curveto
 gs col-1 s gr

/Times-Roman findfont 180.00 scalefont setfont
9001 8251 m
gs 1 -1 sc (IN-2) col-1 show gr
/Times-Roman findfont 270.00 scalefont setfont
8552 8702 m
gs 1 -1 sc (ET1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
8700 7275 m
gs 1 -1 sc (IN-1) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
4650 1575 m
gs 1 -1 sc (Out) col-1 show gr
/Times-Roman findfont 180.00 scalefont setfont
3301 376 m
gs 1 -1 sc (Oscillator) col-1 show gr
showpage
%%Page: 1 1
$F2psEnd
restore
